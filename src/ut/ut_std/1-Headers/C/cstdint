namespace std {
  using int8_t = /*signed integer type*/ ; // 可选
  using int16_t = /*signed integer type*/ ; // 可选
  using int32_t = /*signed integer type*/ ; // 可选
  using int64_t = /*signed integer type*/ ; // 可选
  using int_fast8_t = /*signed integer type*/ ;
  using int_fast16_t = /*signed integer type*/ ;
  using int_fast32_t = /*signed integer type*/ ;
  using int_fast64_t = /*signed integer type*/ ;
  using int_least8_t = /*signed integer type*/ ;
  using int_least16_t = /*signed integer type*/ ;
  using int_least32_t = /*signed integer type*/ ;
  using int_least64_t = /*signed integer type*/ ;
  using intmax_t = /*signed integer type*/ ;
  using intptr_t = /*signed integer type*/ ; // 可选
  using uint8_t = /*unsigned integer type*/ ; // 可选
  using uint16_t = /*unsigned integer type*/ ; // 可选
  using uint32_t = /*unsigned integer type*/ ; // 可选
  using uint64_t = /*unsigned integer type*/ ; // 可选
  using uint_fast8_t = /*unsigned integer type*/ ;
  using uint_fast16_t = /*unsigned integer type*/ ;
  using uint_fast32_t = /*unsigned integer type*/ ;
  using uint_fast64_t = /*unsigned integer type*/ ;
  using uint_least8_t = /*unsigned integer type*/ ;
  using uint_least16_t = /*unsigned integer type*/ ;
  using uint_least32_t = /*unsigned integer type*/ ;
  using uint_least64_t = /*unsigned integer type*/ ;
  using uintmax_t = /*unsigned integer type*/ ;
  using uintptr_t = /*unsigned integer type*/ ; // 可选
}
/* 亦定义下列形式的宏：
INT_[FAST LEAST]{8 16 32 64}_MIN
[U]INT_[FAST LEAST]{8 16 32 64}_MAX
INT{MAX PTR}_MIN
[U]INT{MAX PTR}_MAX
{PTRDIFF SIG_ATOMIC WCHAR WINT}{_MAX _MIN}
SIZE_MAX
*/
/* 亦定义下列形式的类函数宏：
[U]INT{8 16 32 64 MAX}_C
*/