#include <initializer_list>
namespace std {
  // 类模板 linear_congruential_engine
  template<class UIntType, UIntType a, UIntType c, UIntType m>
  class linear_congruential_engine;
  // 类模板 mersenne_twister_engine
  template<class UIntType, size_t w, size_t n, size_t m, size_t r,
           UIntType a, size_t u, UIntType d, size_t s,
           UIntType b, size_t t, UIntType c, size_t l, UIntType f>
  class mersenne_twister_engine;
  // 类模板 subtract_with_carry_engine
  template<class UIntType, size_t w, size_t s, size_t r>
  class subtract_with_carry_engine;
  // 类模板 discard_block_engine
  template<class Engine, size_t p, size_t r>
  class discard_block_engine;
  // 类模板 independent_bits_engine
  template<class Engine, size_t w, class UIntType>
  class independent_bits_engine;
  // 类模板 shuffle_order_engine
  template<class Engine, size_t k>
  class shuffle_order_engine;
  // 带预定义参数的引擎和引擎适配器
  using minstd_rand0 = /*see description*/ ;
  using minstd_rand = /*see description*/ ;
  using mt19937 = /*see description*/ ;
  using mt19937_64 = /*see description*/ ;
  using ranlux24_base = /*see description*/ ;
  using ranlux48_base = /*see description*/ ;
  using ranlux24 = /*see description*/ ;
  using ranlux48 = /*see description*/ ;
  using knuth_b = /*see description*/ ;
  using default_random_engine = /*see description*/ ;
  // 类 random_device
  class random_device;
 
  // 类 seed_seq
  class seed_seq;
  // 函数模板 generate_canonical
  template<class RealType, size_t bits, class URBG>
  RealType generate_canonical(URBG& g);
  // 类模板 uniform_int_distribution
  template<class IntType = int>
  class uniform_int_distribution;
  // 类模板 uniform_real_distribution
  template<class RealType = double>
  class uniform_real_distribution;
  // class bernoulli_distribution
  class bernoulli_distribution;
  // 类模板 binomial_distribution
  template<class IntType = int>
  class binomial_distribution;
  // 类模板 geometric_distribution
  template<class IntType = int>
  class geometric_distribution;
  // 类模板 negative_binomial_distribution
  template<class IntType = int>
  class negative_binomial_distribution;
  // 类模板 poisson_distribution
  template<class IntType = int>
  class poisson_distribution;
  // 类模板 exponential_distribution
  template<class RealType = double>
  class exponential_distribution;
  // 类模板 gamma_distribution
  template<class RealType = double>
  class gamma_distribution;
  // 类模板 weibull_distribution
  template<class RealType = double>
  class weibull_distribution;
  // 类模板 extreme_value_distribution
  template<class RealType = double>
  class extreme_value_distribution;
  // 类模板 normal_distribution
  template<class RealType = double>
  class normal_distribution;
  // 类模板 lognormal_distribution
  template<class RealType = double>
  class lognormal_distribution;
  // 类模板 chi_squared_distribution
  template<class RealType = double>
  class chi_squared_distribution;
  // 类模板 cauchy_distribution
  template<class RealType = double>
  class cauchy_distribution;
  // 类模板 fisher_f_distribution
  template<class RealType = double>
  class fisher_f_distribution;
  // 类模板 student_t_distribution
  template<class RealType = double>
  class student_t_distribution;
  // 类模板 discrete_distribution
  template<class IntType = int>
  class discrete_distribution;
  // 类模板 piecewise_constant_distribution
  template<class RealType = double>
  class piecewise_constant_distribution;
  // 类模板 piecewise_linear_distribution
  template<class RealType = double>
  class piecewise_linear_distribution;
}